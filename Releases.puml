// Diagramas de clases(puede estar sujeto a cambios)
// ¡¡ATENCIÓN!! lo que se subirá hoy es una optimización y otganización del codigo original
//ya que logramos acercarnos bastante a la visión definitiva que tenemos por ahora del proyecto,
//aunque esta puede cambiar durante el desarrollo, no se preveen grandes cambios

@startuml
class Game {
    - ElementList: string[]
    - GameStatus: string
    + Game(CharacterList: string[], GameStatus: string)
    + getGameStatus(): string
    + setGameStatus(GameStatus: string): void
    + getElementList(): string[]
    + StatusCalculation(GameStatus: string): string
    + PlayingCharacterList(): string[]
    + EnemyTurn(CharacterList: string[])
    + Turn(CharacterList: string[])
}

class Map {
    - Row_size: int
    - Column_size: int
    + Map()
    + Map(Row_size: int, Column_size: int)
}

class Position {
    - Row: int
    - Column: int
    + Position()
    + Position(Row: int, Column: int)
    + getRow(): int
    + setRow(Row: int): void
    + getColumn(): int
    + setColumn(Column: int): void
}

 abstract class  Element { 
    # name: String
    # position: Position
    + Element()
    + Element(name: String, position: Position)
    + getPosition(): Position
    + getName(): string
}
